name: Docker

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

env:
  IMAGE_NAME: wx

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: ${{ github.event_name != 'pull_request' && secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        continue-on-error: true
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to Quay.io
        if: ${{ github.event_name != 'pull_request' && secrets.QUAY_USERNAME != '' && secrets.QUAY_TOKEN != '' }}
        continue-on-error: true
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Prepare image names
        id: image-names
        run: |
          IMAGES="ghcr.io/${{ github.repository }}"
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            IMAGES="${IMAGES}"$'\n'"${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}"
          fi
          if [ -n "${{ secrets.QUAY_USERNAME }}" ]; then
            IMAGES="${IMAGES}"$'\n'"quay.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
          fi
          echo "images<<EOF" >> $GITHUB_OUTPUT
          echo "$IMAGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image-names.outputs.images }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker build -t wx-test .
          echo "Testing wx --help..."
          docker run --rm wx-test --help
          echo "Testing wx --version..."
          docker run --rm wx-test --version
